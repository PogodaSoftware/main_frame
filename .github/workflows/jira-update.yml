name: Jira Update

on:
  pull_request:
    types: [ opened, synchronize, edited, closed]

jobs:
  update-jira-issue-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Environment Variables
        run: |
          echo "JIRA_EMAIL=${{ secrets.JIRA_EMAIL }}" >> $GITHUB_ENV
          echo "JIRA_API_TOKEN=${{ secrets.JIRA_API_TOKEN }}" >> $GITHUB_ENV
          echo "BASE_URL=${{ secrets.JIRA_BASE_URL }}" >> $GITHUB_ENV
          echo "PULL_REQUEST_URL=${{ github.event.pull_request.html_url }}" >> $GITHUB_ENV 
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
      - name:   Extract Jira Issue Key from Branch Name 
        id: extract_issue_key 
        run: | 
          branch_name="${{ github.head_ref }}" 
          if [[ $branch_name =~ ([A-Z]+-[0-9]+) ]]; 
            then ISSUE_KEY="${BASH_REMATCH[1]}" 
            echo "ISSUE_KEY=$ISSUE_KEY" >> $GITHUB_ENV 
          else 
            echo "No matching Jira issue key found in branch name." 
            exit 1 
          fi

      - name: Update Jira Issue
        run: |
          # Construct the comment body
          COMMENT_BODY=$(jq -n --arg pr_url "${PULL_REQUEST_URL}" --arg commit_msg "${COMMIT_MESSAGE}" '{
            body: {
              content: [
                {
                  content: [
                    {
                      text: "Pull request merged: [\($pr_url)]\nLatest commit: \($commit_msg)",
                      type: "text"
                    }
                  ],
                  type: "paragraph"
                }
              ],
              type: "doc",
              version: 1
            },
            
          }')

          # Log the comment body for debugging
          echo "Comment Body: ${COMMENT_BODY}"

          # Make the API request
          curl -X POST \
            -u "${JIRA_EMAIL}:${JIRA_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data "${COMMENT_BODY}" \
            "${BASE_URL}/rest/api/3/issue/${ISSUE_KEY}/comment"
        env:
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          ISSUE_KEY: ${ISSUE_KEY}
          PULL_REQUEST_URL: ${{ github.event.pull_request.html_url }}
          COMMIT_MESSAGE: ${{ github.event.pull_request.head.sha }}
  complete-jira-task-if-pr-closed:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'synchronize' || github.event.action == 'closed'
    # 'closed'
    steps:
      - name: Set Environment Variables
        run: |
          echo "JIRA_EMAIL=${{ secrets.JIRA_EMAIL }}" >> $GITHUB_ENV
          echo "JIRA_API_TOKEN=${{ secrets.JIRA_API_TOKEN }}" >> $GITHUB_ENV
          echo "BASE_URL=${{ secrets.JIRA_BASE_URL }}" >> $GITHUB_ENV
          echo "PULL_REQUEST_URL=${{ github.event.pull_request.html_url }}" >> $GITHUB_ENV 
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV
      - name:   Extract Jira Issue Key from Branch Name 
        id: extract_issue_key 
        run: | 
          branch_name="${{ github.head_ref }}" 
          if [[ $branch_name =~ ([A-Z]+-[0-9]+) ]]; 
            then ISSUE_KEY="${BASH_REMATCH[1]}" 
            echo "ISSUE_KEY=$ISSUE_KEY" >> $GITHUB_ENV 
          else 
            echo "No matching Jira issue key found in branch name." 
            exit 1 
          fi
      - name: Update Jira Issue Status
        run: |
            # Change jira status from im progress to done
            TRANSITION_ID=41 
            TRANSITION_BODY=$(jq -n --arg transition_id "$TRANSITION_ID" '{ transition: { id: $transition_id } }') 
            
            echo "Transition Body: ${TRANSITION_BODY}" 
            
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
             -u "${JIRA_EMAIL}:${JIRA_API_TOKEN}" \
             -H "Content-Type: application/json" \
             --data "${TRANSITION_BODY}" \
             "${BASE_URL}/rest/api/3/issue/${ISSUE_KEY}/transitions") 
            if [ "$RESPONSE" -ne 204 ];
            then 
             echo "Failed to transition Jira issue: HTTP status code $RESPONSE"
             exit 1 
            else 
             echo "Successfully transitioned Jira issue to Done." 
            fi
        env:
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          ISSUE_KEY: ${ISSUE_KEY}
          PULL_REQUEST_URL: ${{ github.event.pull_request.html_url }}
          COMMIT_MESSAGE: ${{ github.event.pull_request.head.sha }}

