name: Jira Update

on:
  pull_request:
    types: [opened, closed, edited, synchronize]

jobs:
  update-jira:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Get Branch Name
        id: get_branch
        run: |
          if [ -n "${{ github.head_ref }}" ]; then
            echo "Branch name: ${{ github.head_ref }}"
            echo "::set-output name=branch_name::${{ github.head_ref }}"
          else
            echo "Branch name: ${{ github.ref }}"
            echo "::set-output name=branch_name::${{ github.ref }}"
          fi

      - name: Parse Branch Name
        id: parse_branch
        run: |
          BRANCH_NAME=${{ steps.get_branch.outputs.branch_name }}
          echo "Branch name: $BRANCH_NAME"
          if [[ "$BRANCH_NAME" =~ ^([A-Z]+-[0-9]+)-(.+)$ ]]; then
            PROJECT_KEY=${BASH_REMATCH[1]}
            ISSUE_NUMBER=$(echo $PROJECT_KEY | cut -d'-' -f2)
            echo "::set-output name=project_key::$PROJECT_KEY"
            echo "::set-output name=issue_number::$ISSUE_NUMBER"
          else
            echo "No matching Jira issue format found."
            exit 1
          fi

      - name: Set Environment Variables
        run: |
          echo "JIRA_EMAIL=${{ secrets.JIRA_EMAIL }}" >> $GITHUB_ENV
          echo "JIRA_API_TOKEN=${{ secrets.JIRA_API_TOKEN }}" >> $GITHUB_ENV
          #   echo "JIRA_BASE_URL=${{ secrets.JIRA_BASE_URL }}" >> $GITHUB_ENV
          echo "ISSUE_KEY=${{ steps.parse_branch.outputs.project_key }}" >> $GITHUB_ENV
          echo "PULL_REQUEST_URL=${{ github.event.pull_request.html_url }}" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: Install dependencies
        run: 
            npm install axios

      - name: Run JavaScript to update Jira
        run:
            node jira-update.js
