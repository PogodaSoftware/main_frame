name: Jira Update

on:
  pull_request:
    types: [opened, closed, edited, synchronize]

jobs:
  update-jira:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Environment Variables
        run: |
          echo "JIRA_EMAIL=${{ secrets.JIRA_EMAIL }}" >> $GITHUB_ENV
          echo "JIRA_API_TOKEN=${{ secrets.JIRA_API_TOKEN }}" >> $GITHUB_ENV
          echo "BASE_URL=https://jpogodasoftware.atlassian.net" >> $GITHUB_ENV
          echo "ISSUE_KEY=${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "PULL_REQUEST_URL=${{ github.event.pull_request.html_url }}" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: Update Jira Issue
        run: |
          # Construct the comment body
          COMMENT_BODY=$(cat <<EOF
          {
            "body": {
              "content": [
                {
                  "content": [
                    {
                      "text": "Pull request merged: [${PULL_REQUEST_URL}]\\nLatest commit: ${COMMIT_MESSAGE}",
                      "type": "text"
                    }
                  ],
                  "type": "paragraph"
                }
              ],
              "type": "doc",
              "version": 1
            },
            "visibility": {
              "type": "role",
              "identifier": "Administrators"
            }
          }
          EOF
          )

          # Log the comment body for debugging
          echo "Comment Body: ${COMMENT_BODY}"

          # Make the API request
          curl -X POST \
            -u "${JIRA_EMAIL}:${JIRA_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data "${COMMENT_BODY}" \
            "${BASE_URL}/rest/api/3/issue/${ISSUE_KEY}/comment"
        env:
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          ISSUE_KEY: ${{ github.event.pull_request.number }}
          PULL_REQUEST_URL: ${{ github.event.pull_request.html_url }}
          COMMIT_MESSAGE: ${{ github.event.pull_request.head.sha }}
